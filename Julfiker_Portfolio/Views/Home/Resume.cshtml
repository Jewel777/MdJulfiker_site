@{
    ViewData["Title"] = "Resume";
    var pdfPath = Url.Content("~/files/Md_Julfiker_Ali_Jewel_Resume.pdf");
}

<div class="container mt-5 mb-5">
    <h2 class="text-center fw-bold mb-4 text-warning border-bottom pb-2">Resume</h2>

    <!-- Controls -->
    <div class="d-flex flex-wrap gap-3 align-items-center mb-3">
        <a class="btn btn-warning fw-semibold rounded-pill"
           href="@pdfPath" target="_blank" rel="noopener">
            Open in new tab
        </a>

        <button id="previewBtn" type="button"
                class="btn btn-outline-light fw-semibold rounded-pill">
            Preview here
        </button>

        <a id="downloadBtn" class="btn btn-secondary fw-semibold rounded-pill disabled"
           href="@pdfPath" download>
            Download PDF
        </a>
    </div>

    <!-- Inline viewer (hidden until user clicks Preview) -->
    <div id="pdfShell" class="pdf-shell d-none">
        <div class="pdf-loading" id="pdfLoading">
            <div class="spinner-border" role="status" aria-label="Loading PDF..."></div>
            <small class="text-muted ms-2">Loading preview…</small>
        </div>

        <!-- The actual viewer -->
        <iframe id="resumeFrame"
                title="Resume PDF Preview"
                loading="lazy"
                referrerpolicy="no-referrer"
                sandbox="allow-same-origin allow-scripts"
                class="pdf-frame"></iframe>

        <!-- Fallback if the file is missing or blocked -->
        <div id="pdfFallback" class="alert alert-warning d-none mt-3" role="alert">
            Couldn’t show the inline preview. You can still
            <a class="alert-link" href="@pdfPath" target="_blank" rel="noopener">open the PDF in a new tab</a>
            or use the Download button.
        </div>
    </div>
</div>

<style>
/* Shell height that works across phones/tablets/desktops */
.pdf-shell {
    position: relative;
    background: #0b0f14;
    border-radius: 16px;
    box-shadow: 0 8px 24px rgba(0,0,0,.35);
    overflow: hidden;
    height: clamp(420px, 70vh, 900px);
}

/* Full-bleed iframe viewer */
.pdf-frame {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    border: 0;
    background: #0b0f14; /* avoid white flash while loading */
}

/* Centered loading spinner */
.pdf-loading {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    pointer-events: none;
    z-index: 2;
}

/* Utilities */
.d-none { display: none !important; }
</style>

<script>
(function () {
  const previewBtn  = document.getElementById('previewBtn');
  const shell       = document.getElementById('pdfShell');
  const frame       = document.getElementById('resumeFrame');
  const loadingEl   = document.getElementById('pdfLoading');
  const fallbackEl  = document.getElementById('pdfFallback');
  const downloadBtn = document.getElementById('downloadBtn');

  // IMPORTANT: same-origin static file path
  const PDF_URL = '@pdfPath' + '#view=FitH';

  // simple HEAD check so we can show a friendly message if the file is missing
  async function fileExists(url) {
    try {
      const res = await fetch(url.split('#')[0], { method: 'HEAD', cache: 'no-store' });
      return res.ok;
    } catch (_) { return false; }
  }

  function showShell() {
    shell.classList.remove('d-none');
    loadingEl.classList.remove('d-none');
    fallbackEl.classList.add('d-none');
  }

  function enableDownload() {
    downloadBtn.classList.remove('disabled');
  }

  async function loadPreview() {
    // Don’t reload if already set
    if (frame.getAttribute('src')) return;

    showShell();

    // If the file exists, load it; else, show fallback
    if (await fileExists(PDF_URL)) {
      // Watchdog in case the browser takes too long to render the first page
      const watchdog = setTimeout(() => {
        loadingEl.classList.add('d-none');
        fallbackEl.classList.remove('d-none');
      }, 4000);

      frame.addEventListener('load', () => {
        clearTimeout(watchdog);
        loadingEl.classList.add('d-none');
        enableDownload();
      }, { once: true });

      frame.addEventListener('error', () => {
        clearTimeout(watchdog);
        loadingEl.classList.add('d-none');
        fallbackEl.classList.remove('d-none');
      }, { once: true });

      frame.setAttribute('src', PDF_URL);
    } else {
      loadingEl.classList.add('d-none');
      fallbackEl.classList.remove('d-none');
    }
  }

  if (previewBtn) {
    previewBtn.addEventListener('click', loadPreview);
  }

  // Also enable Download if the file exists (even if user never opens preview)
  fileExists(PDF_URL).then(ok => { if (ok) enableDownload(); });
})();
</script>
